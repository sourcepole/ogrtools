#/***************************************************************************
# Interlis
# 
# Interlis Import/Export
#                             -------------------
#        begin                : 2014-01-18
#        copyright            : (C) 2014 by Pirmin Kalberer / Sourcepole
#        email                : pka@sourcepole.ch
# ***************************************************************************/
# 
#/***************************************************************************
# *                                                                         *
# *   This program is free software; you can redistribute it and/or modify  *
# *   it under the terms of the GNU General Public License as published by  *
# *   the Free Software Foundation; either version 2 of the License, or     *
# *   (at your option) any later version.                                   *
# *                                                                         *
# ***************************************************************************/

# CONFIGURATION
PLUGIN_UPLOAD = $(CURDIR)/plugin_upload.py

QGISDIR=.qgis2

# Makefile for a PyQGIS plugin 

# translation
SOURCES = interlis.py ui_interlis.py __init__.py interlisdialog.py sublayersdialog.py
#TRANSLATIONS = i18n/interlis_en.ts
TRANSLATIONS = 

# global

PLUGINNAME = interlis

PY_FILES = interlis.py interlisdialog.py __init__.py

EXTRAS = icon.png metadata.txt

UI_FILES = ui_interlis.py ui_sublayersdialog.py

RESOURCE_FILES = resources_rc.py

HELP = help/build/html

default: compile

compile: $(UI_FILES) $(RESOURCE_FILES)

%_rc.py : %.qrc
	pyrcc4 -o $*_rc.py  $<

%.py : %.ui
	pyuic4 -o $@ $<

%.qm : %.ts
	lrelease $<

# Update ili2db JARs (e.g. VERSIONPG=3.11.2 VERSIONGPKG=3.10.5)
ili2dbjars:
	wget -O /tmp/ili2pg.zip http://www.eisenhutinformatik.ch/interlis/ili2pg/ili2pg-$(VERSIONPG).zip
	unzip -d /tmp/ili2db /tmp/ili2pg.zip
	wget -O /tmp/ili2gpkg.zip http://www.eisenhutinformatik.ch/interlis/ili2gpkg/ili2gpkg-$(VERSIONGPKG).zip
	unzip -d /tmp/ili2db /tmp/ili2gpkg.zip
	rm -rf jars/libs
	mkdir jars/libs
	cp /tmp/ili2db/ili2gpkg-*/ili2gpkg.jar jars/
	cp /tmp/ili2db/ili2gpkg-*/libs/* jars/libs/
	cp /tmp/ili2db/ili2pg-*/ili2pg.jar jars/
	cp /tmp/ili2db/ili2pg-*/libs/* jars/libs/
	wget -O /tmp/ili2pg-src.tgz https://github.com/claeis/ili2db/archive/ili2pg-$(VERSIONPG).tar.gz
	tar -C /tmp -xzf /tmp/ili2pg-src.tgz
	cp /tmp/ili2db-ili2pg-*/docs/CHANGELOG.txt jars/

# The deploy  target only works on unix like operating system where
# the Python plugin directory is located at:
# $HOME/$(QGISDIR)/python/plugins
deploy: compile doc transcompile
	mkdir -p $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)
	cp -vf $(PY_FILES) $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)
	cp -vf $(UI_FILES) $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)
	cp -vf $(RESOURCE_FILES) $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)
	cp -vf $(EXTRAS) $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)
	cp -vfr i18n $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)
	cp -vfr $(HELP) $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)/help

# The dclean target removes compiled python files from plugin directory
# also delets any .svn entry
dclean:
	find $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME) -iname "*.pyc" -delete
	find $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME) -iname ".svn" -prune -exec rm -Rf {} \;

# The derase deletes deployed plugin
derase:
	rm -Rf $(HOME)/$(QGISDIR)/python/plugins/$(PLUGINNAME)

# The zip target deploys the plugin and creates a zip file with the deployed
# content. You can then upload the zip file on http://plugins.qgis.org
zip: deploy dclean 
	rm -f $(PLUGINNAME).zip
	cd $(HOME)/$(QGISDIR)/python/plugins; zip -9r $(CURDIR)/$(PLUGINNAME).zip $(PLUGINNAME)

# Create a zip package of the plugin named $(PLUGINNAME).zip. 
# This requires use of git (your plugin development directory must be a 
# git repository).
# To use, pass a valid commit or tag as follows:
#   make package VERSION=Version_0.3.2
package: compile
		rm -f $(PLUGINNAME).zip
		git archive --prefix=$(PLUGINNAME)/ -o $(PLUGINNAME).zip $(VERSION)
		#Add symlinked lib dirs
		rm -rf $(PLUGINNAME)
		unzip $(PLUGINNAME).zip
		rm $(PLUGINNAME)/ogrtools
		cp -r ../../ogrtools $(PLUGINNAME)/
		rm $(PLUGINNAME).zip
		zip -r -q $(PLUGINNAME).zip $(PLUGINNAME) -x '*.pyc' '*.bak'
		rm -rf $(PLUGINNAME)
		echo "Created package: $(PLUGINNAME).zip"

upload: #zip
	$(PLUGIN_UPLOAD) $(PLUGINNAME).zip

# transup
# update .ts translation files
transup:
	pylupdate4 Makefile

# transcompile
# compile translation files into .qm binary format
transcompile: $(TRANSLATIONS:.ts=.qm)

# transclean
# deletes all .qm files
transclean:
	rm -f i18n/*.qm

clean:
	rm $(UI_FILES) $(RESOURCE_FILES)

# build documentation with sphinx
doc: 
	cd help; make html

# Publish new version:
# make package VERSION=master
# make upload
